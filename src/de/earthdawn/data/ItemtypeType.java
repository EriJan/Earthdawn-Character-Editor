//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: see version control commit date
//


package de.earthdawn.data;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for itemtype_type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="itemtype_type">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="undefined"/>
 *     &lt;enumeration value="armor"/>
 *     &lt;enumeration value="shield"/>
 *     &lt;enumeration value="meleweapon"/>
 *     &lt;enumeration value="thowingweapon"/>
 *     &lt;enumeration value="missleweapon"/>
 *     &lt;enumeration value="purse"/>
 *     &lt;enumeration value="ring"/>
 *     &lt;enumeration value="cloth"/>
 *     &lt;enumeration value="brooch"/>
 *     &lt;enumeration value="animal"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "itemtype_type")
@XmlEnum
public enum ItemtypeType {

    @XmlEnumValue("undefined")
    UNDEFINED("undefined"),
    @XmlEnumValue("armor")
    ARMOR("armor"),
    @XmlEnumValue("shield")
    SHIELD("shield"),
    @XmlEnumValue("meleweapon")
    MELEWEAPON("meleweapon"),
    @XmlEnumValue("thowingweapon")
    THOWINGWEAPON("thowingweapon"),
    @XmlEnumValue("missleweapon")
    MISSLEWEAPON("missleweapon"),
    @XmlEnumValue("purse")
    PURSE("purse"),
    @XmlEnumValue("ring")
    RING("ring"),
    @XmlEnumValue("cloth")
    CLOTH("cloth"),
    @XmlEnumValue("brooch")
    BROOCH("brooch"),
    @XmlEnumValue("animal")
    ANIMAL("animal");
    private final String value;

    ItemtypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ItemtypeType fromValue(String v) {
        for (ItemtypeType c: ItemtypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
